name: Windows build

on:
  push:
    branches: [main]          # run on every push to main
  workflow_dispatch:          # manual ‚ÄúRun workflow‚Äù button

jobs:
  freeze:
    runs-on: windows-latest

    steps:
      # 1Ô∏è‚É£ Check out the repo
      - name: "üì• Checkout"
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Install Python 3.11 (3.12 wheels still flaky)
      - name: "üêç Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # 3Ô∏è‚É£ Install requirements + PyInstaller
      - name: "üì¶ Install dependencies"
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pyinstaller

      # 4Ô∏è‚É£ Build the EXE from main/main.py
      #    shell: cmd   ‚Üí so the ^ line-continuations work in Windows
      - name: "üßä Build EXE"
        shell: cmd
        run: >
          pyinstaller main\main.py                ^
            --name RemoteDashboard                ^
            --onefile --noconsole                 ^
            --add-data "main\\templates;templates" ^
            --add-data "main\\static;static"

      # 5Ô∏è‚É£ Upload the EXE as a workflow artifact
      - name: "üì§ Upload artifact"
        uses: actions/upload-artifact@v4
        with:
          name: RemoteDashboard_exe
          path: dist/RemoteDashboard.exe

      # 6Ô∏è‚É£ (Optional) tag & publish a GitHub Release
      - name: "üöÄ Release"
        if: github.ref == 'refs/heads/main' && startsWith(github.event_name, 'push')
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.run_number }}
          name: "Build ${{ github.run_number }}"
          files: dist/RemoteDashboard.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
